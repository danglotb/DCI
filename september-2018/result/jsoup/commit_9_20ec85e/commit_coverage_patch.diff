diff --git a/src/main/java/org/jsoup/nodes/Element.java b/src/main/java/org/jsoup/nodes/Element.java
index a966b60..61420bf 100644
--- a/src/main/java/org/jsoup/nodes/Element.java
+++ b/src/main/java/org/jsoup/nodes/Element.java
@@ -688,6 +688,26 @@ public class Element extends Node {
     }
 
     /**
+     * Get all the siblings after this element.
+     *
+     * @return  all the siblings after this element, or null if there is no siblings after this
+     */
+    public List<Element> nextElementSiblings() {
+        if (parentNode == null) {
+            return null;
+        }
+
+        List<Element> siblings = parent().childElementsList();
+        int index = indexInList(this, siblings);
+        Validate.notNull(index);
+
+        if (siblings.size() > index + 1) {
+            return siblings.subList(index + 1, siblings.size());
+        }
+        return null;
+    }
+
+    /**
      * Gets the previous element sibling of this element.
      * @return the previous element, or null if there is no previous element
      * @see #nextElementSibling()
@@ -704,6 +724,26 @@ public class Element extends Node {
     }
 
     /**
+     * Get all the element siblings before this element.
+     *
+     * @return all the previous element siblings, or null if no previous siblings
+     */
+    public List<Element> previousElementSiblings() {
+        if (parentNode == null) {
+            return null;
+        }
+
+        List<Element> siblings = parent().childElementsList();
+        int index = indexInList(this, siblings);
+        Validate.notNull(index);
+
+        if (index > 0 && index < siblings.size()) {
+            return siblings.subList(0, index);
+        }
+        return null;
+    }
+
+    /**
      * Gets the first element sibling of this element.
      * @return the first sibling that is an element (aka the parent's first element child) 
      */
diff --git a/src/test/java/org/jsoup/nodes/ElementTest.java b/src/test/java/org/jsoup/nodes/ElementTest.java
index 70a58f0..9e59181 100644
--- a/src/test/java/org/jsoup/nodes/ElementTest.java
+++ b/src/test/java/org/jsoup/nodes/ElementTest.java
@@ -1324,4 +1324,33 @@ public class ElementTest {
         assertEquals("One Two", doc.text());
     }
 
+    @Test
+    public void testNextElementSiblings() {
+        Document doc = Jsoup.parse("<li id='a'>a</li>" +
+            "<li id='b'>b</li>" +
+            "<li id='c'>c</li>");
+        Element element = doc.getElementById("a");
+        List<Element> elementSiblings = element.nextElementSiblings();
+        assertNotNull(elementSiblings);
+        assertEquals(2, elementSiblings.size());
+
+        Element element1 = doc.getElementById("c");
+        List<Element> elementSiblings1 = element1.nextElementSiblings();
+        assertNull(elementSiblings1);
+    }
+
+    @Test
+    public void testPreviousElementSiblings() {
+        Document doc = Jsoup.parse("<li id='a'>a</li>" +
+            "<li id='b'>b</li>" +
+            "<li id='c'>c</li>");
+        Element element = doc.getElementById("b");
+        List<Element> elementSiblings = element.previousElementSiblings();
+        assertNotNull(elementSiblings);
+        assertEquals(1, elementSiblings.size());
+
+        Element element1 = doc.getElementById("a");
+        List<Element> elementSiblings1 = element1.previousElementSiblings();
+        assertNull(elementSiblings1);
+    }
 }
