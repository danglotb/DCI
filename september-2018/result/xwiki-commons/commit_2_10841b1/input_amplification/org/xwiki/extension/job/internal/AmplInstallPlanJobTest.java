package org.xwiki.extension.job.internal;


import java.util.Date;
import java.util.Iterator;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.xwiki.extension.ExtensionId;
import org.xwiki.extension.LocalExtension;
import org.xwiki.extension.TestResources;
import org.xwiki.extension.job.plan.ExtensionPlan;
import org.xwiki.extension.job.plan.ExtensionPlanAction;
import org.xwiki.extension.job.plan.ExtensionPlanNode;
import org.xwiki.extension.job.plan.internal.DefaultExtensionPlan;
import org.xwiki.extension.repository.CoreExtensionRepository;
import org.xwiki.extension.test.AbstractExtensionHandlerTest;
import org.xwiki.extension.test.ConfigurableDefaultCoreExtensionRepository;
import org.xwiki.job.Request;
import org.xwiki.job.event.status.JobProgress;
import org.xwiki.job.event.status.JobProgressStep;


public class AmplInstallPlanJobTest extends AbstractExtensionHandlerTest {
    private ConfigurableDefaultCoreExtensionRepository coreRepository;

    @Override
    @Before
    public void setUp() throws Exception {
        super.setUp();
        this.coreRepository = this.mocker.getInstance(CoreExtensionRepository.class);
    }

    @Test(timeout = 10000)
    public void testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524() throws Exception, Throwable {
        ExtensionPlan o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1 = installPlan(TestResources.REMOTE_WITHLDEPENDENCY_ID);
        Assert.assertEquals("[INSTALL: rwithldependency/version (null) ([NONE: installedextension/1.0 (null) ([], version)])]", ((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getJobType());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getQuestion());
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getHours())));
        Assert.assertEquals(46, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getHours())));
        Assert.assertEquals(46, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getLog().isEmpty());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHLDEPENDENCY_ID);
        int o_testInstallPlanWithInstalledDependencyOnRoot_add62232__3 = plan.getTree().size();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        node.getAction().getExtension().getId();
        node.getAction().getAction();
        node.getAction().getPreviousExtension();
        node.getAction().getNamespace();
        int o_testInstallPlanWithInstalledDependencyOnRoot_add62232__18 = node.getChildren().size();
        ExtensionPlanNode o_testInstallPlanWithInstalledDependencyOnRoot_add62232__20 = node.getChildren().iterator().next();
        boolean o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502__29 = ((org.xwiki.extension.Extension)((org.xwiki.extension.job.plan.ExtensionPlanAction)((org.xwiki.extension.job.plan.internal.DefaultExtensionPlanNode)o_testInstallPlanWithInstalledDependencyOnRoot_add62232__20).getAction()).getExtension()).getFeatures().contains("installedextension-feature");
        ExtensionPlanNode childnode = node.getChildren().iterator().next();
        boolean boolean_104 = (childnode.getAction().getExtension()) instanceof LocalExtension;
        childnode.getAction().getExtension().getId();
        childnode.getAction().getAction();
        node.getAction().getPreviousExtension();
        node.getAction().getPreviousExtension();
        childnode.getChildren().isEmpty();
        Assert.assertEquals("[INSTALL: rwithldependency/version (null) ([NONE: installedextension/1.0 (null) ([], version)])]", ((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getJobType());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getQuestion());
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getHours())));
        Assert.assertEquals(46, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getHours())));
        Assert.assertEquals(46, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallPlanWithInstalledDependencyOnRoot_add62232_add64502_add65524__1)).getLog().isEmpty());
    }

    @Test(timeout = 10000)
    public void testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500() throws Exception, Throwable {
        try {
            ExtensionPlan o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3 = installPlan(TestResources.REMOTE_UPGRADE10_ID);
            Assert.assertEquals("[INSTALL: upgrade/1.0 (null) ([])]", ((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).toString());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getActions().isEmpty());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getTree().isEmpty());
            Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getJobType());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).isStatusLogIsolated());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).isInteractive());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).getPropertyNames().isEmpty());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).isVerbose());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).isStatusSerialized());
            Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).isRemote());
            Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getRequest())).getId());
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getCurrentStep())).getChildren().isEmpty());
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getCurrentStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getCurrentStep())).getOffset())), 0.1);
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getCurrentLevelOffset())), 0.1);
            Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getRootStep())).getChildren().isEmpty());
            Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getRootStep())).getParent());
            Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getRootStep())).getOffset())), 0.1);
            Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getProgress())).getOffset())), 0.1);
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getQuestion());
            Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getTimezoneOffset())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getYear())));
            Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getMonth())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getHours())));
            Assert.assertEquals(25, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getMinutes())));
            Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getStartDate())).getDate())));
            Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getDay())));
            Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getTimezoneOffset())));
            Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getYear())));
            Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getMonth())));
            Assert.assertEquals(2, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getHours())));
            Assert.assertEquals(25, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getMinutes())));
            Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getEndDate())).getDate())));
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).isSerialized());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).isIsolated());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).isSubJob());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getParentJobStatus());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).isCancelable());
            Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).isCanceled());
            Assert.assertNull(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getError());
            Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250_add122500__3)).getLog().isEmpty());
            ExtensionPlan plan = installPlan(TestResources.REMOTE_UPGRADE10_ID);
            int o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250__6 = plan.getTree().size();
            int o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250__8 = plan.getTree().size();
            Iterator<ExtensionPlanNode> it = plan.getTree().iterator();
            ExtensionPlanNode node = it.next();
            ExtensionPlanAction action = node.getAction();
            action.getExtension().getId();
            action.getAction();
            int o_testInstallOnNamespaceThenOnRoot_remove118109_failAssert278_add118250__20 = action.getPreviousExtensions().size();
            action.getPreviousExtension().getId();
            action.getNamespace();
            node.getChildren().size();
            node = it.next();
            action = node.getAction();
            action.getExtension().getId();
            action.getExtension().getId();
            action.getAction();
            action.getPreviousExtensions().size();
            action.getNamespace();
            node.getChildren().size();
            node.getChildren().size();
            org.junit.Assert.fail("testInstallOnNamespaceThenOnRoot_remove118109 should have thrown NullPointerException");
        } catch (NullPointerException expected) {
        }
    }

    @Test(timeout = 10000)
    public void testInstallRemoteWithMissingDependency_add68040() throws Exception, Throwable {
        ExtensionPlan o_testInstallRemoteWithMissingDependency_add68040__1 = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        Assert.assertEquals("[INSTALL: rwithmissingdependency/version (null) ([REPAIR: installedwithmissingdependency/version (null) ([INSTALL: missingdependency/version (null) ([], version)], version)])]", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getQuestion());
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getHours())));
        Assert.assertEquals(49, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getHours())));
        Assert.assertEquals(49, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getLog().isEmpty());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGDEPENDENCY_ID);
        int o_testInstallRemoteWithMissingDependency_add68040__4 = plan.getTree().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__4)));
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        action.getExtension().getId();
        action.getExtension().getId();
        action.getExtension().getId();
        action.getAction();
        action.getAction();
        action.getAction();
        action.getAction();
        int o_testInstallRemoteWithMissingDependency_add68040__15 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__15)));
        action.getNamespace();
        action.getNamespace();
        action.getNamespace();
        action.getNamespace();
        action.getNamespace();
        action.getNamespace();
        int o_testInstallRemoteWithMissingDependency_add68040__18 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__18)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        int o_testInstallRemoteWithMissingDependency_add68040__29 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__29)));
        int o_testInstallRemoteWithMissingDependency_add68040__31 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__31)));
        int o_testInstallRemoteWithMissingDependency_add68040__35 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__35)));
        int o_testInstallRemoteWithMissingDependency_add68040__37 = node.getChildren().size();
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__37)));
        node = node.getChildren().iterator().next();
        action = node.getAction();
        int o_testInstallRemoteWithMissingDependency_add68040__49 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__49)));
        int o_testInstallRemoteWithMissingDependency_add68040__51 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__51)));
        int o_testInstallRemoteWithMissingDependency_add68040__53 = action.getPreviousExtensions().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__53)));
        int o_testInstallRemoteWithMissingDependency_add68040__58 = node.getChildren().size();
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__58)));
        Assert.assertEquals("[INSTALL: rwithmissingdependency/version (null) ([REPAIR: installedwithmissingdependency/version (null) ([INSTALL: missingdependency/version (null) ([], version)], version)])]", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isInteractive());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getQuestion());
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getHours())));
        Assert.assertEquals(49, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getStartDate())).getMinutes())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getDate())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getMonth())));
        Assert.assertEquals(0, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getHours())));
        Assert.assertEquals(49, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallRemoteWithMissingDependency_add68040__1)).getLog().isEmpty());
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__4)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__15)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__18)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__29)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__31)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__35)));
        Assert.assertEquals(1, ((int) (o_testInstallRemoteWithMissingDependency_add68040__37)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__49)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__51)));
        Assert.assertEquals(0, ((int) (o_testInstallRemoteWithMissingDependency_add68040__53)));
    }

    @Test(timeout = 10000)
    public void testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131() throws Exception, Throwable {
        ExtensionId __DSPOT_o_7938 = new ExtensionId("]vY|g:xju/7_KXb)^V*K", "W7f^Bz|<F,RJj;LEkS?T");
        ExtensionPlan o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3 = installPlan(TestResources.REMOTE_WITHRMISSINGOPTIONALDEPENDENCY_ID, "namespace");
        Assert.assertEquals("[INSTALL: rwithmissingoptionaldependency/version (namespace) ([])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isInteractive());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getQuestion());
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getDate())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getMonth())));
        Assert.assertEquals(1, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getHours())));
        Assert.assertEquals(54, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getMinutes())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getDate())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getMonth())));
        Assert.assertEquals(1, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getHours())));
        Assert.assertEquals(54, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getLog().isEmpty());
        ExtensionPlan plan = installPlan(TestResources.REMOTE_WITHRMISSINGOPTIONALDEPENDENCY_ID, "namespace");
        int o_testInstallWithInvalidOptionalDependency_add106342__3 = plan.getTree().size();
        ExtensionPlanNode o_testInstallWithInvalidOptionalDependency_add106342__5 = plan.getTree().iterator().next();
        ExtensionPlanNode node = plan.getTree().iterator().next();
        ExtensionPlanAction action = node.getAction();
        ExtensionId __DSPOT_invoc_233 = action.getExtension().getId();
        action.getAction();
        int o_testInstallWithInvalidOptionalDependency_add106342__17 = action.getPreviousExtensions().size();
        action.getNamespace();
        int o_testInstallWithInvalidOptionalDependency_add106342__20 = node.getChildren().size();
        int o_testInstallWithInvalidOptionalDependency_add106342_rv107632__34 = __DSPOT_invoc_233.compareTo(__DSPOT_o_7938);
        Assert.assertEquals("[INSTALL: rwithmissingoptionaldependency/version (namespace) ([])]", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).toString());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getActions().isEmpty());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getTree().isEmpty());
        Assert.assertEquals("installplan", ((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getJobType());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).getPropertyNames().isEmpty());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isRemote());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isInteractive());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isStatusLogIsolated());
        Assert.assertFalse(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isVerbose());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).isStatusSerialized());
        Assert.assertNull(((Request) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getRequest())).getId());
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getCurrentLevelOffset())), 0.1);
        Assert.assertFalse(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getChildren().isEmpty());
        Assert.assertNull(((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getParent());
        Assert.assertEquals(1.0, ((double) (((JobProgressStep) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getRootStep())).getOffset())), 0.1);
        Assert.assertEquals(1.0, ((double) (((JobProgress) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getProgress())).getOffset())), 0.1);
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getQuestion());
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getDate())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getMonth())));
        Assert.assertEquals(1, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getHours())));
        Assert.assertEquals(54, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getStartDate())).getMinutes())));
        Assert.assertEquals(27, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getDate())));
        Assert.assertEquals(4, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getDay())));
        Assert.assertEquals(-120, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getTimezoneOffset())));
        Assert.assertEquals(118, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getYear())));
        Assert.assertEquals(8, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getMonth())));
        Assert.assertEquals(1, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getHours())));
        Assert.assertEquals(54, ((int) (((Date) (((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getEndDate())).getMinutes())));
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isSerialized());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isIsolated());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isSubJob());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getParentJobStatus());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isCancelable());
        Assert.assertFalse(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).isCanceled());
        Assert.assertNull(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getError());
        Assert.assertTrue(((DefaultExtensionPlan) (o_testInstallWithInvalidOptionalDependency_add106342_rv107632_add108131__3)).getLog().isEmpty());
    }
}

