diff --git a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
index 78118fe..cb71811 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
@@ -79,12 +79,10 @@ public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingC
         if (message.getArgumentArray() != null) {
             writer.startNode(FIELD_ARGUMENTARRAY);
             for (Object argument : message.getArgumentArray()) {
-                if (argument != null) {
-                    if (isSerializable(argument)) {
-                        writeItem(argument, context, writer);
-                    } else {
-                        writeItem(argument.toString(), context, writer);
-                    }
+                if (isSerializable(argument)) {
+                    writeItem(argument, context, writer);
+                } else {
+                    writeItem(argument.toString(), context, writer);
                 }
             }
             writer.endNode();
@@ -97,6 +95,10 @@ public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingC
 
     protected boolean isSerializable(Object argument)
     {
+        if (argument == null) {
+            return true;
+        }
+
         Serializable serializable = argument.getClass().getAnnotation(Serializable.class);
         if (serializable != null) {
             return serializable.value();
diff --git a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
index 9c1d52f..5227fa7 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
@@ -65,7 +65,7 @@ public static boolean isSafeType(Object obj)
 
     /**
      * @param item the item to serialize
-     * @return true of the item looks like a component
+     * @return true of the item is serializable
      */
     public static boolean isSerializable(Object item)
     {
@@ -88,6 +88,8 @@ public static boolean isSerializable(Object item)
 
                 return true;
             }
+        } else {
+            return true;
         }
 
         return false;
diff --git a/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java b/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
index 43c592b..e96061c 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
@@ -21,6 +21,8 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Objects;
 
 import javax.inject.Provider;
@@ -255,6 +257,22 @@ public void testLogWithArguments() throws IOException
     }
 
     @Test
+    public void testLogWithNullArguments() throws IOException
+    {
+        JobStatus status = new DefaultJobStatus<Request>(new DefaultRequest(), null, null, null);
+
+        status.getLog().error("error message", "arg1", null, "arg3");
+
+        status = writeread(status);
+
+        assertNotNull(status.getLog());
+        assertEquals("error message", status.getLog().peek().getMessage());
+        assertEquals("arg1", status.getLog().peek().getArgumentArray()[0]);
+        assertEquals(null, status.getLog().peek().getArgumentArray()[1]);
+        assertEquals("arg3", status.getLog().peek().getArgumentArray()[2]);
+    }
+
+    @Test
     public void testLogWithComponentArgument() throws IOException
     {
         JobStatus status = new DefaultJobStatus<Request>(new DefaultRequest(), null, null, null);
