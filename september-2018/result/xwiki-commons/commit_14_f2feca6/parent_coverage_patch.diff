diff --git a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
index cb71811dd..78118fe64 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/SafeMessageConverter.java
@@ -79,10 +79,12 @@ public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingC
         if (message.getArgumentArray() != null) {
             writer.startNode(FIELD_ARGUMENTARRAY);
             for (Object argument : message.getArgumentArray()) {
-                if (isSerializable(argument)) {
-                    writeItem(argument, context, writer);
-                } else {
-                    writeItem(argument.toString(), context, writer);
+                if (argument != null) {
+                    if (isSerializable(argument)) {
+                        writeItem(argument, context, writer);
+                    } else {
+                        writeItem(argument.toString(), context, writer);
+                    }
                 }
             }
             writer.endNode();
@@ -95,10 +97,6 @@ public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingC
 
     protected boolean isSerializable(Object argument)
     {
-        if (argument == null) {
-            return true;
-        }
-
         Serializable serializable = argument.getClass().getAnnotation(Serializable.class);
         if (serializable != null) {
             return serializable.value();
diff --git a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
index 5227fa72c..9c1d52fff 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/internal/xstream/XStreamUtils.java
@@ -65,7 +65,7 @@ public static boolean isSafeType(Object obj)
 
     /**
      * @param item the item to serialize
-     * @return true of the item is serializable
+     * @return true of the item looks like a component
      */
     public static boolean isSerializable(Object item)
     {
@@ -88,8 +88,6 @@ public static boolean isSerializable(Object item)
 
                 return true;
             }
-        } else {
-            return true;
         }
 
         return false;
diff --git a/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java b/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
index e96061cc7..43c592b24 100644
--- a/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
+++ b/xwiki-commons-core/xwiki-commons-job/src/test/java/org/xwiki/job/internal/JobStatusSerializerTest.java
@@ -21,8 +21,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Objects;
 
 import javax.inject.Provider;
@@ -256,22 +254,6 @@ public void testLogWithArguments() throws IOException
         assertEquals("arg2", status.getLog().peek().getArgumentArray()[1]);
     }
 
-    @Test
-    public void testLogWithNullArguments() throws IOException
-    {
-        JobStatus status = new DefaultJobStatus<Request>(new DefaultRequest(), null, null, null);
-
-        status.getLog().error("error message", "arg1", null, "arg3");
-
-        status = writeread(status);
-
-        assertNotNull(status.getLog());
-        assertEquals("error message", status.getLog().peek().getMessage());
-        assertEquals("arg1", status.getLog().peek().getArgumentArray()[0]);
-        assertEquals(null, status.getLog().peek().getArgumentArray()[1]);
-        assertEquals("arg3", status.getLog().peek().getArgumentArray()[2]);
-    }
-
     @Test
     public void testLogWithComponentArgument() throws IOException
     {
